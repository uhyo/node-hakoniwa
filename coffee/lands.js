// Generated by CoffeeScript 1.6.3
(function() {
  var Base, Hex, Position, gameconfig, islands, lands, _ref, _ref1, _ref2, _ref3, _ref4,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  gameconfig = require('./gameconfig');

  islands = require('../ts/islands');

  Position = (function() {
    function Position(x, y) {
      this.x = x;
      this.y = y;
    }

    Position.prototype.toString = function() {
      return "(" + this.x + ", " + this.y + ")";
    };

    return Position;

  })();

  Hex = (function() {
    function Hex() {
      this.position = new islands.Position(null, null);
    }

    Hex.prototype.name = "?";

    Hex.prototype.setPosition = function(x, y) {
      if (x instanceof islands.Position) {
        return this.position = x;
      } else {
        return this.position = new islands.Position(x, y);
      }
    };

    Hex.prototype.html = function(owner) {
      return this.rawhtml({
        src: "null.gif",
        title: "???",
        desc: ""
      });
    };

    Hex.prototype.rawhtml = function(param) {
      return "<img class='hex' src='" + gameconfig.html.imagedir + param.src + "'>";
    };

    Hex.prototype.getName = function() {
      return this.name;
    };

    Hex.prototype.isLand = function() {
      return true;
    };

    Hex.prototype.isSea = function() {
      return false;
    };

    Hex.prototype.isTown = function() {
      return false;
    };

    Hex.prototype.isBase = function() {
      return false;
    };

    return Hex;

  })();

  Base = (function(_super) {
    __extends(Base, _super);

    function Base() {
      _ref = Base.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Base.prototype.isBase = function() {
      return true;
    };

    Base.prototype.expTable = [];

    Base.prototype.maxExp = 0;

    Base.prototype.expToLevel = function(exp) {
      var i;
      i = this.expTable.length;
      while (i >= 1) {
        if (exp >= this.expTable[i - 1]) {
          return i;
        }
        i -= 1;
      }
      return 1;
    };

    return Base;

  })(Hex);

  module.exports = lands = {
    Hex: Hex,
    Sea: (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref1 = _Class.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      _Class.prototype.name = "海";

      _Class.prototype.isLand = function() {
        return false;
      };

      _Class.prototype.isSea = function() {
        return true;
      };

      _Class.prototype.html = function() {
        return this.rawhtml({
          src: "land0.gif",
          title: "海",
          desc: ""
        });
      };

      return _Class;

    })(Hex),
    Shoal: (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref2 = _Class.__super__.constructor.apply(this, arguments);
        return _ref2;
      }

      _Class.prototype.name = "浅瀬";

      _Class.prototype.isLand = function() {
        return false;
      };

      _Class.prototype.isSea = function() {
        return true;
      };

      _Class.prototype.html = function() {
        return this.rawhtml({
          src: "land14.gif",
          title: "浅瀬",
          desc: ""
        });
      };

      return _Class;

    })(Hex),
    Waste: (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _Class.__super__.constructor.apply(this, arguments);
        this.type = 0;
      }

      _Class.prototype.name = "荒地";

      _Class.prototype.html = function() {
        return this.rawhtml({
          src: this.type === 0 ? "land1.gif" : "land13.gif",
          title: "荒地",
          desc: ""
        });
      };

      return _Class;

    })(Hex),
    Plains: (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref3 = _Class.__super__.constructor.apply(this, arguments);
        return _ref3;
      }

      _Class.prototype.name = "平地";

      _Class.prototype.html = function() {
        return this.rawhtml({
          src: "land2.gif",
          title: "平地",
          desc: ""
        });
      };

      return _Class;

    })(Hex),
    Town: (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _Class.__super__.constructor.apply(this, arguments);
        this.population = 1;
      }

      _Class.prototype.name = "街系地形";

      _Class.prototype.getName = function() {
        if (this.population < 30) {
          return "村";
        } else if (this.population < 100) {
          return "町";
        } else {
          return "都市";
        }
      };

      _Class.prototype.html = function() {
        return this.rawhtml({
          src: (this.population < 30 ? "land3.gif" : this.population < 100 ? "land4.gif" : "land5.gif"),
          title: this.getName(),
          desc: "" + this.population + gameconfig.unit.population
        });
      };

      return _Class;

    })(Hex),
    Forest: (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _Class.__super__.constructor.apply(this, arguments);
        this.value = 1;
      }

      _Class.prototype.name = "森";

      _Class.prototype.html = function(owner) {
        return this.rawhtml({
          src: "land6.gif",
          title: "森",
          desc: owner ? "" + this.value + gameconfig.unit.tree : ""
        });
      };

      return _Class;

    })(Hex),
    Farm: (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _Class.__super__.constructor.apply(this, arguments);
        this.quantity = 0;
      }

      _Class.prototype.name = "農場";

      _Class.prototype.html = function() {
        return this.rawhtml({
          src: "land7.gif",
          title: "農場",
          desc: "" + this.quantity + "0" + gameconfig.unit.population + "規模"
        });
      };

      return _Class;

    })(Hex),
    Factory: (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _Class.__super__.constructor.apply(this, arguments);
        this.quantity = 0;
      }

      _Class.prototype.name = "工場";

      _Class.prototype.html = function() {
        return this.rawhtml({
          src: "land8.gif",
          title: "工場",
          desc: "" + this.quantity + "0" + gameconfig.unit.population + "規模"
        });
      };

      return _Class;

    })(Hex),
    LandBase: (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _Class.__super__.constructor.apply(this, arguments);
        this.exp = 0;
      }

      _Class.prototype.name = "ミサイル基地";

      _Class.prototype.html = function(owner) {
        if (gameconfig.base.hide && !owner) {
          return this.rawhtml({
            src: "land6.gif",
            title: "森",
            desc: ""
          });
        } else {
          return this.rawhtml({
            src: "land9.gif",
            title: "ミサイル基地",
            desc: "レベル" + (this.expToLevel(this.exp))
          });
        }
      };

      return _Class;

    })(Base),
    Defence: (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        _ref4 = _Class.__super__.constructor.apply(this, arguments);
        return _ref4;
      }

      _Class.prototype.name = "防衛基地";

      _Class.prototype.html = function() {
        return this.rawhtml({
          src: "land10.gif",
          title: "防衛基地",
          desc: ""
        });
      };

      return _Class;

    })(Hex)
  };

}).call(this);
